***********************  Normalisation ***********************

1) - It is a step towards database optimisation.
2) - FUNCTIONAL DEPENDENCY (FD): 
     (a) - It's a relationship between the primary key attribute of the relation to that of the other attribute of the 
           relation.
     Types of FD -->>

            (a) - Trivial FD -->>
                                 A->B has Trivial FD if B is a subset of A.
            (b) - Non Trivial FD -->>
                                    A->B has a non Trivial FD if B is not a subset of A.
3) - Rules of FD:

        (a) - Reflexive: if A is a set of attributes and B is a subset of A then A->B holds.
        (b) - Augmentation: If B can be determined from A, then adding an attribute to this FD won't change anything.
        (c) - Transitivity: if A determines B and B determines C, we can say that A determines C.

4) - Why Normalisation ?

    To avoid redundancy in the DB, not to store redundant data.

5) - What happen if we have redundant data ?

     Insertion, Deletion and Updation anomalies arises.

6) - Anomalies:

    (a) - Insertion: When certain attribute can't be inserted into the DB without the presence of other data.
    (b) - Deletion: It refers to the situtation where the deletion of data results in the unintended loss of some other
                    important data.
    (c) - Updation: It is when an update of a single data value requires multiple rows of data to be updated.

7) - Normalisation:

    It is used to minimise the redundancy from a relations.
    It divides the composite attributes into individual attributes.

8) - Types of Nomral Forms:

    (a) - 1NF -->> Every relation cell must have atomic value. Relation must not have multi-valued attribute.
    (b) - 2NF -->> Relation must be in 1NF. There shouldn't be any partial dependency.
                   (i) - All non-prime attributes must be fully dependent on primary key.
                   (ii) - Non Prime attribute can't depend on the part of the primary key. 
    (c) - 3NF -->> Relation must be in 2NF. No Transitivity dependency exists.
                   (i) - Non prime attribute should not find a non prime attribute.
    (d) - BCNF -->> Relation must be in 3NF. A->B must be a super key.
                    (i) - we must not derive prime attribute from any prime or non prime attribute.

9) - Advantages of Normalisation:

        (i) - It helps to minimise data redundancy.
        (ii) - greater overall database organization.
        (iii) - Data Consistency id maintained in DB.
 
