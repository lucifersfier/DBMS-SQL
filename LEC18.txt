*********************************       SQL     *********************************
1) - Difference between SQL and MySQL -->>

                SQL                      |                  MYSQL
    (a) - Query Language.                |   (a) - MYSQL itself a RDBMS.
    (b) - way to access data.            |   (b) - CRUD done on it using SQL

2) - RDBMS is a software that enables us to implement designed relational model.
     Example: MySQL, MS SQL, Oracle, IBM etc.
     Table/Relation is the simplest form of data storage object in R-DB.
     MySQL is open source RDBMS , and it uses SQL for all CRUD operations.

3) - MySQL used client-server model, where client is CLI or frontend that used services provided by MySQL server.

4) - IN SQL data types --->>>

     size -->> TINY < SMALL < MEDIUM < INT < BIGINT

5) - We can use SIGNED AND UNSIGNED which means 
     TINYINT -->> (-128 TO 127) but if we changed it to Unsigned
     UNSIGNED TINYINT -->> (0 TO 255)

6) - SYNTAX ---->>>>

                    CREATE TABLE table_name(
                    col1 INT,
                    COL2 INT UNSIGNED    
                    );

7) - Types of Command in SQL -->>

     (i) - Data Definition Language -->> 

            (a) - CREATE 
            (b) - ALTER TABLE
            (c) - DROP
            (d) - TRUNCATE
            (e) - RENAME

     (ii) - DRL/DQL (Data Retrieval Language/ Data Query Language) -->>

            (a) - SELECT

     (iii) - Data Manipulation Language -->>

            (a) - INSERT
            (b) - UPDATE
            (c) - DELETE

     (iv) - Data Control Language -->>

            (a) - GRANT
            (b) - REVOKE

     (V) - Transaction Control Language -->>

            (a) - START TRANSACTION
            (b) - COMMIT
            (c) - ROLLBACK
            (d) - SAVEPOINT

8) - MANAGING DATABASE(DDL)

     (i) - Creation of DB ->

        (a) - CREATE DATABASE IF  NOT EXISTS db-name;
        (b) - USE db-name; // need to execute to choose on which DB CREATE TABLE etc commands will be executed.
              // make switching between DBs possible.
        (c) - DROP DATABASE IF EXISTS db-name; // dropping database.
        (d) - SHOW DATABASES; //list of all DBs in the server.
        (e) - SHOW TABLES; // list of all tables in the selected database.
     
     (ii) - Creating a ORG Database -->>

              CREATE DATABASE ORG;
              SHOW DATABASES;
              USE ORG;

              CREATE TABLE WORKER(
                     WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
                     FIRST_NAME VARCHAR(255),
                     LAST_NAME VARCHAR(255),
                     SALARY INT(15),
                     JOINING_DATE DATETIME,
                     DEPARTMENT VARCHAR(255)
              );

              INSERT INTO WORKER(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
              (001, 'NITTYANSH', 'SRIVASTAVA', '100000', '14-02-23 09.00.00', 'HR'),
              (002, 'SHIVANSH', 'SRIVASTAVA', '200000', '15-03-23 10.00.00', 'SALES'),
              (003, 'JAHNAVI', 'SRIVASTAVA', '300000', '16-12-23 11.00.00', 'IT'),
              (004, 'AMAN', 'SAXENA', '500000', '18-11-23 12.00.00', 'HR');


              SELECT *FROM WORKER;


              CREATE TABLE BONUS(
	              WORKER_REF_ID INT,
	              BONUS_AMOUNT INT(10),
	              BONUS_DATE DATETIME,
	              FOREIGN KEY (WORKER_REF_ID)
		              REFERENCES WORKER(WORKER_ID)
		              ON DELETE CASCADE
              );     

              INSERT INTO BONUS
	              (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		              (001, 25000, '16-02-23'),
                            (002, 25600, '16-03-23'),
                            (003, 29000, '16-03-23'),
                            (004, 35000, '16-03-23');

              SELECT* from BONUS;

              CREATE TABLE TITLE(
	              WORKER_REF_ID INT,
                     WORKER_TITLE VARCHAR(255),
                     AFFECTED_FROM DATETIME,
                     FOREIGN KEY (WORKER_REF_ID)
              		REFERENCES WORKER(WORKER_ID)
                            ON DELETE CASCADE
              );

              INSERT INTO TITLE
	              (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
		              (001, 'MANAGER', '2016-02-20 00:00:00'),
                            (002, 'EXECUTIVE', '2016-04-21 00:00:00'),
                            (003, 'EXECUTIVE', '2016-04-20 00:00:00'),
                            (004, 'MANAGER', '2016-05-20 00:00:00');

     (iii) - Data Retrieval Language -->>
        
        (a) - 

