********************************** NoSql vs SQL DB **********************************

1) - NoSQL databases are non-tabular databases and store data differently than relational tables. 
     NoSQL databases are likely document, key-value, wide-column and graph.
     They provide flexible schemas and scale easily with large amounts of data and high user loads.

     (a) - They are schema free 
     (b) - Data structure used aren't tabular, they are more flexible, has the ability to adjust dynamically.
     (c) - Most of the NoSQL are open sources and has the capability of horizontal scaling.
     (d) - It just stores data in some other format other than relational. 

2) - NoSQL databases allow developers to store huge amounts of unstructured data, giving them a lot of flexibility.

3) - some NoSQL databases like MongoDB provide these capabilities.

4) - NoSQL DB Advantages --->>

        (a) - Flexible schema : RDBMS has pre-defined schema, which become an issue when we 
                                don't have all the data with us or we need to change the schema.

        (b) - Horizontal scaling : 
                                   (a) - It is also known as Scale-out, refers to bringing on additional nodes
                                         to share the load. This is difficult with relational databases
                                         due to the difficulty in spreading out related data across nodes.
                                         With non-relational databases, this is made simpler since collections are 
                                         self-contained and not coupled relationally. This allows them to be distributed 
                                         across nodes more simply, as queries do not have to "join" them together across nodes.
                                   (b) - It is achieved through Sharding or Replica-Sets.

        (c) - High Availability :  
                                   (a) - NoSQL databases are highly available due to its auto replication feature i.e., whenever
                                         any kind of failure 
                                         happens data replicates itself to the preceding consistent state.
                                   (b) - if a server fails, we can access that data from another server as well, as in NoSQL
                                         database data is store at multiple servers.

        (d) - Easy Insert and Read Operations : 

                                   (a) - Queries in NoSQL databases can be faster than SQL databases. 
                                   (b) - But difficult delete or update operations.

        (e) - Caching mechanism
        (f) - NoSQL use case is more for Cloud applications.

5) - When to use NoSql?

        (a) - Fast-paced Agile development
        (b) - Storage of structured and semi-structured data.
        (c) - Huge volumes of Data
        (d) - Requirements for scale-out architecture.
        (e) - Modern application paradigms like micro-services and real-time streaming.

6) - NoSQL Database Misconception -->>

        (a) - Relationship data is best suited for relational databses.
        (b) - NoSQL DB don't support ACID transactions.

7) - Types of NoSQL Data Models -->>

        (a) - Key-Value Stores :

                               (i) - It uses compact, efficient index structures to be able to quickly and reliably locate a value by its key, making
                                     them ideal for systems that need to be able to find and retrieve data in constant time.
                               (ii) - Use case - Shopping Carts & User Profiles 
        (b) - Column-Oriented : 

                               (i) - The data is stored such that each row of a column will be next to other rows from that same column.
                               (ii) - While a relational DBs stores data in a rows and reads data row by row, a column store is organised as a set 
                                      of columns. This means that when you want to run analytics on a small number of columns, you can read those columns 
                                      directly without consuming memory with the unwanted data. Columns are often of the same type and benefit form more efficient
                                      compression, making reads even faster.
                               (iii) - Use case - Analytics 
        
        (c) - Document Based Stores :

                               (i) - This DB stores data in documents similar to JSON objects. 
                               (ii) - Use Case - E-commerce platforms and mobile app development industries.

        (d) - Graph Based Stores :

                               (i) - A Graph database focuses on the relationsip beetween data elements. Each element is stored as a node.
                               (ii) - A graph database is optimised to capture and search the connections between data elements, overcoming the overhead
                                      associated with joining multiple tables in SQL.
                               (iii) - Use case - Fraud detection and Social Networks

8) - NoSQL Databases Dis-advantages :

                                (i) - Data Redundancy
                                (ii) - Update & Delete operations are costly
                                (iii) - All type of NoSQL Data model doesn't fulfill all of your application needs.
                                (iv) - Doesn't support ACID properties in general
                                (v) - Doesn't support data entry with consistency constraints.


        